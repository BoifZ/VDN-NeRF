general {
    base_exp_dir = ./exp/airforce/womsk_learn_white_colmap
    recording = [
        ./dpt_runner.py,
        ./dpt_models,
    ]
}

dataset {
    data_dir = ./depth_data/airforce
    img_dir = IMG_DIR
    # depth_dir = wavelet_feats_white/0
    depth_dir = 00
    render_cameras_name = IMG_DIR/cameras_sphere_colmap.npz
    object_cameras_name = IMG_DIR/cameras_sphere_colmap.npz
}

train {
    learning_rate = 5e-4
    learning_rate_alpha = 0.05
    end_iter = 300000

    batch_size = 512
    validate_resolution_level = 4
    warm_up_end = 5000
    anneal_end = 50000
    use_white_bkgd = True

    save_freq = 10000
    val_freq = 5000
    val_mesh_freq = 10000
    report_freq = 500

    igr_weight = 0.1
    mask_weight = 0.0
    use_mask = False

    extract_depth = False
    focal_learnable = True
    poses_learnable = True
    start_refine_pose_iter = -1
    start_refine_focal_iter = -1
    focal_lr = 5e-4
    pose_lr = 5e-4
    focal_lr_gamma = 0.9
    pose_lr_gamma = 0.9
    step_size = 5000
}

model {
    nerf {
        D = 8,
        d_in = 4,
        d_in_view = 3,
        W = 256,
        multires = 10,
        multires_view = 4,
        output_ch = 4,
        skips=[4],
        rgb_dims=3,
        use_viewdirs=True,
    }

    sdf_network {
        d_out = 257
        d_in = 3
        d_hidden = 256
        n_layers = 8
        skip_in = [4]
        multires = 6
        bias = 0.5
        scale = 1.0
        geometric_init = True
        weight_norm = True
    }

    variance_network {
        init_val = 0.3
    }

    rendering_network {
        d_feature = 256
        mode = idr
        d_in = 9
        d_out = 3
        d_hidden = 256
        n_layers = 4
        weight_norm = True
        multires_view = 4
        squeeze_out = True
    }

    neus_renderer {
        n_samples = 64
        n_importance = 64
        n_outside = 32
        up_sample_steps = 4     # 1 for simple coarse-to-fine sampling
        perturb = 1.0
    }

    focal {
        req_grad = True
        fx_only = True
        order = 2
    }

    pose {
        learn_R = True
        learn_t = True
    }
}
